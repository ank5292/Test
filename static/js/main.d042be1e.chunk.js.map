{"version":3,"sources":["assets/img/verify-certificate.png","assets/img/sample_ceritificate.png","assets/img/qr-code.svg","assets/img/certificate-valid.svg","assets/img/certificate-invalid.svg","assets/img/next-arrow.svg","components/CustomButton/index.js","constants.js","redux/reducers/events.js","assets/img/loading.gif","components/Loader/index.js","components/CertificateStatus/index.js","utils/utils.js","components/QRScanner/index.js","components/VerifyCertificate/index.js","redux/reducers/index.js","redux/store.js","App.js","reportWebVitals.js","index.js"],"names":["CustomButton","children","className","props","monthNames","CertificateDetailsPaths","path","format","data","givenDate","dob","Date","day","getDate","toLocaleString","minimumIntegerDigits","useGrouping","monthName","getMonth","year","getFullYear","formatDate","dose","totalDoses","EVENT_ACTION_TYPES","EVENT_TYPES","initialState","addEventAction","event","type","payload","date","toISOString","Loader","src","LoadingImg","jsigs","require","RSAKeyPair","documentLoader","documentLoaders","node","contexts","credentialsv1","vaccinationContext","customLoader","url","console","log","context","config","certificatePublicKey","get","undefined","contextUrl","documentUrl","document","startsWith","JSON","parse","CertificateStatus","certificateData","goBack","useState","isLoading","setLoading","isValid","setValid","setData","useHistory","setTimeout","axios","post","catch","e","dispatch","useDispatch","checkIfRevokedCertificate","a","then","res","extra","getDose","i","j","k","ordinal_suffix_of","useEffect","signedJSON","publicKey","SECURITY_CONTEXT_URL","id","controller","publicKeyPem","assertionMethod","key","AssertionProofPurpose","purposes","RsaSignature2018","suites","verify","suite","purpose","compactProof","verified","response","status","credentialSubject","verifyData","CertificateValidImg","CertificateInValidImg","alt","getCertificateStatusAsString","Object","keys","map","index","style","fontSize","textAlign","replace","pathOr","onClick","QRScanner","scanBarcode","canvas","createElement","width","height","ctx","getContext","drawImage","video","getImageData","scanImageData","symbols","length","sym","onScan","decode","state","hasUserMedia","navigator","mediaDevices","getUserMedia","webkitGetUserMedia","mozGetUserMedia","msGetUserMedia","mountedInstances","push","this","userMediaRequested","requestUserMedia","scanTimer","setInterval","nextProps","stringify","videoConstraints","clearInterval","indexOf","splice","stream","getVideoTracks","getAudioTracks","track","stop","window","URL","revokeObjectURL","sourceSelected","constraints","forEach","instance","handleUserMedia","MediaStreamTrack","getSources","sources","videoSource","source","kind","videoSourceId","constraint","deviceId","Array","isArray","ideal","constraintToSourceId","optional","sourceId","err","setState","onError","srcObject","error","createObjectURL","autoPlay","playsInline","ref","Component","defaultProps","facingMode","VerifyCertificate","result","setResult","showScanner","setShowScanner","VerifyCertificateImg","QRCodeImg","Container","color","Row","Col","SampleCertificateImg","href","target","marginTop","marginBottom","JSZip","loadAsync","contents","files","async","combineReducers","events","action","filter","includes","store","serializedState","localStorage","getItem","loadState","createStore","rootReducer","__REDUX_DEVTOOLS_EXTENSION__","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d042be1e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/verify-certificate.29230f43.png\";","export default __webpack_public_path__ + \"static/media/sample_ceritificate.1adc63e3.png\";","export default __webpack_public_path__ + \"static/media/qr-code.0d1efb4c.svg\";","export default __webpack_public_path__ + \"static/media/certificate-valid.6e8564be.svg\";","export default __webpack_public_path__ + \"static/media/certificate-invalid.a9ac96af.svg\";","export default __webpack_public_path__ + \"static/media/next-arrow.2fe80e2d.svg\";","import React from \"react\";\nimport \"./index.css\";\n\nexport const CustomButton = ({children, className, ...props}) => {\n    return (\n        <button className={`custom-button ${className}`} {...props}>{children}</button>\n    )\n}","const monthNames = [\n    \"Jan\", \"Feb\", \"Mar\", \"Apr\",\n    \"May\", \"Jun\", \"Jul\", \"Aug\",\n    \"Sep\", \"Oct\", \"Nov\", \"Dec\"\n];\n\nexport function formatDate(givenDate) {\n    const dob = new Date(givenDate);\n    let day = (dob.getDate()).toLocaleString('en-US', {minimumIntegerDigits: 2, useGrouping:false});\n    let monthName = monthNames[dob.getMonth()];\n    let year = dob.getFullYear();\n\n    return `${day}-${monthName}-${year}`;\n}\n\nexport const CertificateDetailsPaths = {\n    \"Name\": {\n        path: [\"credentialSubject\", \"name\"],\n        format: (data) => (data)\n    },\n    \"Age\": {\n        path: [\"credentialSubject\", \"age\"],\n        format: (data) => (data)\n    },\n    \"Gender\": {\n        path: [\"credentialSubject\", \"gender\"],\n        format: (data) => (data)\n    },\n    \"Certificate ID\": {\n        path: [\"evidence\", \"0\", \"certificateId\"],\n        format: (data) => (data)\n    },\n    \"Beneficiary ID\": {\n        path: [\"credentialSubject\", \"refId\"],\n        format: (data) => (data)\n    },\n    \"Vaccine Name\": {\n        path: [\"evidence\", \"0\", \"vaccine\"],\n        format: (data) => (data)\n    },\n    \"Date of ${dose} Dose\": {\n        path: [\"evidence\", \"0\", \"effectiveStart\"],\n        format: (data) => (formatDate(data))\n    },\n    \"Vaccination Status\": {\n        path: [\"evidence\", \"0\"],\n        format: (data) => {\n            if (data.dose !== data.totalDoses) {\n                return \"Partially Vaccinated\"\n            } else {\n                return \"Fully Vaccinated\"\n            }\n        }\n    },\n    \"Vaccination at\": {\n        path: [\"evidence\", \"0\", \"facility\", \"name\"],\n        format: (data) => (data)\n    }\n};\n","import axios from \"axios\";\n\nconst EVENT_ACTION_TYPES = {\n    ADD_EVENT: \"ADD_EVENT\",\n    REMOVE_EVENT: \"REMOVE_EVENT\"\n};\nexport const EVENT_TYPES = {\n    CERTIFICATE_DOWNLOAD: \"certificate-download\",\n    VALID_VERIFICATION: \"valid-verification\",\n    INVALID_VERIFICATION: \"invalid-verification\",\n    REVOKED_CERTIFICATE: \"revoked-certificate\",\n};\nconst initialState = {\n    data: [],\n};\n\nexport function eventsReducer(state = initialState, action) {\n    switch (action.type) {\n        case EVENT_ACTION_TYPES.ADD_EVENT: {\n            return {\n                ...state,\n                data: [...state.data, {id: state.data.length, ...action.payload}],\n\n            };\n        }\n        case EVENT_ACTION_TYPES.REMOVE_EVENT: {\n            return {\n                ...state,\n                data: state.data.filter(event => !action.payload.includes(event.id)),\n\n            };\n        }\n        default:\n            return state;\n    }\n}\n\nexport const addEventAction = (event) => {\n    return {\n        type: EVENT_ACTION_TYPES.ADD_EVENT,\n        payload: {...event, date: new Date().toISOString()}\n    }\n};\n\nconst removeEventsAction = (eventIds) => {\n    return {\n        type: EVENT_ACTION_TYPES.REMOVE_EVENT,\n        payload: eventIds\n    }\n};\n\nexport const postEvents = ({data}, dispatch) => {\n    if (data.length > 0) {\n        try {\n            axios\n              .post(\"/divoc/api/v1/events/\", data)\n              .then((res) => {\n                  return dispatch(removeEventsAction(data.map(e => e.id)));\n              }).catch((e) => {\n                console.log(e);\n            });\n        } catch (e) {\n            console.log(e);\n        }\n    }\n};","export default __webpack_public_path__ + \"static/media/loading.68d0272c.gif\";","import React from \"react\";\nimport LoadingImg from \"../../assets/img/loading.gif\";\nimport \"./index.css\";\n\nexport const Loader = () => {\n    return (\n        <div className=\"loader-wrapper\">\n            <img src={LoadingImg}/>\n\n        </div>\n    )\n};","import React, {useEffect, useState} from \"react\";\nimport \"./index.css\";\nimport CertificateValidImg from \"../../assets/img/certificate-valid.svg\";\nimport CertificateInValidImg from \"../../assets/img/certificate-invalid.svg\";\nimport NextArrowImg from \"../../assets/img/next-arrow.svg\";\n// import LearnProcessImg from \"../../assets/img/leanr_more_small.png\";\n// import FeedbackSmallImg from \"../../assets/img/feedback-small.png\";\n// import DownloadSmallImg from \"../../assets/img/download-certificate-small.png\";\nimport config from \"../../config\";\nimport {pathOr} from \"ramda\";\nimport {CustomButton} from \"../CustomButton\";\nimport {CertificateDetailsPaths} from \"../../constants\";\nimport {useDispatch} from \"react-redux\";\nimport {addEventAction, EVENT_TYPES} from \"../../redux/reducers/events\";\nimport {useHistory} from \"react-router-dom\";\nimport axios from \"axios\";\nimport {ordinal_suffix_of} from \"../../utils/utils\";\nimport {Loader} from \"../Loader\";\n\nconst jsigs = require('jsonld-signatures');\nconst {RSAKeyPair} = require('crypto-ld');\nconst {documentLoaders} = require('jsonld');\nconst {node: documentLoader} = documentLoaders;\nconst {contexts} = require('security-context');\nconst credentialsv1 = require('../../utils/credentials.json');\nconst {vaccinationContext} = require('vaccination-context');\n\nconst customLoader = url => {\n    console.log(\"checking \" + url);\n    const c = {\n        \"did:india\": config.certificatePublicKey,\n        \"https://example.com/i/india\": config.certificatePublicKey,\n        \"https://w3id.org/security/v1\": contexts.get(\"https://w3id.org/security/v1\"),\n        'https://www.w3.org/2018/credentials#': credentialsv1,\n        \"https://www.w3.org/2018/credentials/v1\": credentialsv1,\n        \"https://cowin.gov.in/credentials/vaccination/v1\": vaccinationContext,\n    };\n    let context = c[url];\n    if (context === undefined) {\n        context = contexts[url];\n    }\n    if (context !== undefined) {\n        return {\n            contextUrl: null,\n            documentUrl: url,\n            document: context\n        };\n    }\n    if (url.startsWith(\"{\")) {\n        return JSON.parse(url);\n    }\n    console.log(\"Fallback url lookup for document :\" + url)\n    return documentLoader()(url);\n};\n\nexport const CertificateStatus = ({certificateData, goBack}) => {\n    const [isLoading, setLoading] = useState(false);\n    const [isValid, setValid] = useState(false);\n    const [data, setData] = useState({});\n    const history = useHistory();\n\n    setTimeout(()=>{\n        try {\n            axios\n              .post(\"/divoc/api/v1/events/\", {\"date\":new Date().toISOString(), \"type\":\"verify\"})\n              .catch((e) => {\n                console.log(e);\n            });\n        } catch (e) {\n            console.log(e);\n        }\n    }, 100)\n\n    const dispatch = useDispatch();\n    useEffect(() => {\n        setLoading(true);\n        async function verifyData() {\n            try {\n                const signedJSON = JSON.parse(certificateData);\n                const publicKey = {\n                    '@context': jsigs.SECURITY_CONTEXT_URL,\n                    id: 'did:india',\n                    type: 'RsaVerificationKey2018',\n                    controller: 'https://cowin.gov.in/',\n                    publicKeyPem: config.certificatePublicKey\n                };\n                const controller = {\n                    '@context': jsigs.SECURITY_CONTEXT_URL,\n                    id: 'https://cowin.gov.in/',\n                    publicKey: [publicKey],\n                    // this authorizes this key to be used for making assertions\n                    assertionMethod: [publicKey.id]\n                };\n                const key = new RSAKeyPair({...publicKey});\n                const {AssertionProofPurpose} = jsigs.purposes;\n                const {RsaSignature2018} = jsigs.suites;\n                const result = await jsigs.verify(signedJSON, {\n                    suite: new RsaSignature2018({key}),\n                    purpose: new AssertionProofPurpose({controller}),\n                    documentLoader: customLoader,\n                    compactProof: false\n                });\n                if (result.verified) {\n                    const revokedResponse = await checkIfRevokedCertificate(signedJSON)\n                    if (revokedResponse.response.status !== 200) {\n                        console.log('Signature verified.');\n                        setValid(true);\n                        setData(signedJSON);\n                        dispatch(addEventAction({\n                            type: EVENT_TYPES.VALID_VERIFICATION,\n                            extra: signedJSON.credentialSubject\n                        }));\n                        setLoading(false);\n                        return;\n                    }\n                }\n                dispatch(addEventAction({type: EVENT_TYPES.INVALID_VERIFICATION, extra: signedJSON}));\n                setValid(false);\n                setLoading(false);\n            } catch (e) {\n                console.log('Invalid data', e);\n                setValid(false);\n                dispatch(addEventAction({type: EVENT_TYPES.INVALID_VERIFICATION, extra: certificateData}));\n                setLoading(false);\n            }\n\n        }\n        setTimeout(() => {\n            verifyData()\n        }, 500)\n\n    }, []);\n\n    async function checkIfRevokedCertificate(data) {\n        return axios\n            .post(\"/divoc/api/v1/certificate/revoked\", data)\n            .then((res) => {\n                dispatch(addEventAction({type: EVENT_TYPES.REVOKED_CERTIFICATE, extra: certificateData}));\n                return res\n            }).catch((e) => {\n                console.log(e);\n                return e\n            });\n    }\n\n    function getCertificateStatusAsString(data) {\n        if (!data || !data[\"evidence\"]) {\n            return \"\"\n        }\n\n        const dose = data[\"evidence\"][0][\"dose\"]\n        const totalDoses = data[\"evidence\"][0][\"totalDoses\"] || 2\n\n        if (dose === totalDoses) {\n            return \"Final Certificate for COVID-19 Vaccination\"\n        } else {\n            return `Provisional Certificate for COVID-19 Vaccination (${getDose(data)} Dose)`\n        }\n    }\n\n    function getDose(data) {\n        if (!data || !data[\"evidence\"]) {\n            return \"\"\n        }\n        return ordinal_suffix_of(data[\"evidence\"][0][\"dose\"])\n    }\n\n    return (\n        isLoading ? <Loader/> : <div className=\"certificate-status-wrapper\">\n            <img src={isValid ? CertificateValidImg : CertificateInValidImg} alt={\"\"}\n                 className=\"certificate-status-image\"/>\n            <h3 className=\"certificate-status\">\n                {\n                    isValid ? \"Certificate Successfully Verified\" : \"Certificate Invalid\"\n                }\n            </h3>\n            <br/>\n            {\n                isValid && <h5>\n                    {\n                        getCertificateStatusAsString(data)\n                    }\n                </h5>\n            }\n            {\n                isValid && <table className=\"mt-3\">\n                    {\n                        Object.keys(CertificateDetailsPaths).map((key, index) => {\n                            const context = CertificateDetailsPaths[key];\n                            return (\n                                <tr key={index} style={{fontSize:\"smaller\", textAlign: \"left\"}}>\n                                    <td className=\"pr-3\" >{key.replace(\"${dose}\", getDose(data))}</td>\n                                    <td className=\"font-weight-bolder value-col\">{context.format(pathOr(\"NA\", context.path, data))}</td>\n                                </tr>\n                            )\n                        })\n                    }\n\n                </table>\n            }\n            <br/>\n            <CustomButton className=\"blue-btn m-3\" onClick={goBack}>Verify Another Certificate</CustomButton>\n            {/*<SmallInfoCards text={\"Provide Feedback\"}*/}\n            {/*                onClick={() => {*/}\n            {/*                    history.push(\"/side-effects\")*/}\n            {/*                }}*/}\n            {/*                img={FeedbackSmallImg} backgroundColor={\"#FFFBF0\"}/>*/}\n            {/*<SmallInfoCards text={\"Learn about the Vaccination process\"} img={LearnProcessImg}*/}\n            {/*               onClick={() => {*/}\n            {/*                    history.push(\"/learn\")*/}\n            {/*                }}*/}\n            {/*                backgroundColor={\"#EFF5FD\"}/>*/}\n        </div>\n    )\n};\n\nexport const SmallInfoCards = ({text, img, onClick, backgroundColor}) => (\n    <div className=\"small-info-card-wrapper mt-3 mb-3\" style={{backgroundColor: backgroundColor}}>\n        <div className=\"w-50 \">\n            <img src={img} alt={\"\"} className=\"small-card-img float-right\"/>\n        </div>\n        <div onClick={onClick}\n             className=\"w-50 d-flex flex-column align-items-start justify-content-center font-weight-bold\">\n            <span>{text}</span>\n            <img src={NextArrowImg} alt={\"\"}/>\n        </div>\n    </div>\n);\n","export function ordinal_suffix_of(i) {\n    const j = i % 10,\n        k = i % 100;\n    if (j == 1 && k != 11) {\n        return i + \"st\";\n    }\n    if (j == 2 && k != 12) {\n        return i + \"nd\";\n    }\n    if (j == 3 && k != 13) {\n        return i + \"rd\";\n    }\n    return i + \"th\";\n}","import React, {Component} from 'react';\nimport './index.css';\nimport {scanImageData} from \"zbar.wasm\";\n\nconst SCAN_PERIOD_MS = 100;\n\nfunction hasGetUserMedia() {\n    return !!(\n        (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) ||\n        navigator.webkitGetUserMedia ||\n        navigator.mozGetUserMedia ||\n        navigator.msGetUserMedia\n    );\n}\n\nexport default class QRScanner extends Component {\n    static defaultProps = {\n        className: '',\n        height: 1000,\n        width: 1000,\n        videoConstraints: {\n            facingMode: \"environment\"\n        }\n    };\n\n\n    static mountedInstances = [];\n\n    static userMediaRequested = false;\n\n    static scanTimer = null;\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            hasUserMedia: false,\n        };\n    }\n\n    componentDidMount() {\n        if (!hasGetUserMedia()) return;\n\n        QRScanner.mountedInstances.push(this);\n\n        if (!this.state.hasUserMedia && !QRScanner.userMediaRequested) {\n            this.requestUserMedia();\n        }\n        QRScanner.scanTimer = setInterval(() => {\n            this.scanBarcode();\n        }, SCAN_PERIOD_MS);\n\n\n    }\n\n    componentWillUpdate(nextProps) {\n        if (\n            JSON.stringify(nextProps.videoConstraints) !==\n            JSON.stringify(this.props.videoConstraints)\n        ) {\n            this.requestUserMedia();\n        }\n    }\n\n    componentWillUnmount() {\n        clearInterval(QRScanner.scanTimer);\n        const index = QRScanner.mountedInstances.indexOf(this);\n        QRScanner.mountedInstances.splice(index, 1);\n\n        QRScanner.userMediaRequested = false;\n        if (QRScanner.mountedInstances.length === 0 && this.state.hasUserMedia) {\n            if (this.stream.getVideoTracks && this.stream.getAudioTracks) {\n                this.stream.getVideoTracks().map(track => track.stop());\n            } else {\n                this.stream.stop();\n            }\n            window.URL.revokeObjectURL(this.state.src);\n        }\n    }\n\n    scanBarcode = async () => {\n\n        let canvas = document.createElement('canvas');\n        canvas.width = this.props.width;\n        canvas.height = this.props.height\n        let ctx = canvas.getContext('2d');\n        ctx.drawImage(this.video, 0, 0, this.props.width, this.props.height);\n        let data = ctx.getImageData(0, 0, canvas.width, canvas.height);\n        const symbols = await scanImageData(data);\n        scanImageData(data)\n        // console.log(symbols, Date.now());\n        for (let i = 0; i < symbols.length; ++i) {\n            const sym = symbols[i];\n\n            this.props.onScan(sym.decode())\n        }\n\n    }\n\n\n    requestUserMedia() {\n        navigator.getUserMedia =\n            navigator.mediaDevices.getUserMedia ||\n            navigator.webkitGetUserMedia ||\n            navigator.mozGetUserMedia ||\n            navigator.msGetUserMedia;\n\n        const sourceSelected = (videoConstraints) => {\n            const constraints = {\n                video: videoConstraints || true,\n            };\n\n            navigator.mediaDevices\n                .getUserMedia(constraints)\n                .then((stream) => {\n                    QRScanner.mountedInstances.forEach(instance =>\n                        instance.handleUserMedia(null, stream),\n                    );\n                })\n                .catch((e) => {\n                    QRScanner.mountedInstances.forEach(instance =>\n                        instance.handleUserMedia(e),\n                    );\n                });\n        };\n\n        if ('mediaDevices' in navigator) {\n            sourceSelected(this.props.videoConstraints);\n        } else {\n            const optionalSource = id => ({optional: [{sourceId: id}]});\n\n            const constraintToSourceId = (constraint) => {\n                const deviceId = (constraint || {}).deviceId;\n\n                if (typeof deviceId === 'string') {\n                    return deviceId;\n                } else if (Array.isArray(deviceId) && deviceId.length > 0) {\n                    return deviceId[0];\n                } else if (typeof deviceId === 'object' && deviceId.ideal) {\n                    return deviceId.ideal;\n                }\n\n                return null;\n            };\n\n            MediaStreamTrack.getSources((sources) => {\n\n                let videoSource = null;\n\n                sources.forEach((source) => {\n                    if (source.kind === 'video') {\n                        videoSource = source.id;\n                    }\n                });\n\n\n                const videoSourceId = constraintToSourceId(this.props.videoConstraints);\n                if (videoSourceId) {\n                    videoSource = videoSourceId;\n                }\n\n                sourceSelected(\n                    optionalSource(videoSource),\n                );\n            });\n        }\n\n        QRScanner.userMediaRequested = true;\n    }\n\n    handleUserMedia(err, stream) {\n        if (err) {\n            this.setState({hasUserMedia: false});\n            this.props.onError(err);\n\n            return;\n        }\n\n        this.stream = stream;\n\n        try {\n            this.video.srcObject = stream;\n            this.setState({hasUserMedia: true});\n        } catch (error) {\n            this.setState({\n                hasUserMedia: true,\n                src: window.URL.createObjectURL(stream),\n            });\n        }\n\n    }\n\n    render() {\n        return (\n            <div id='videoview'>\n                <video\n                    autoPlay\n                    width={\"100%\"}\n                    src={this.state.src}\n                    className={this.props.className}\n                    playsInline\n                    style={this.props.style}\n                    ref={(ref) => {\n                        this.video = ref;\n                    }}\n                />\n                <canvas id=\"overlay\" width={this.props.width} height={this.props.height}/>\n            </div>\n        );\n    }\n}","import React, {useState} from \"react\";\nimport \"./index.css\";\nimport VerifyCertificateImg from \"../../assets/img/verify-certificate.png\"\nimport SampleCertificateImg from \"../../assets/img/sample_ceritificate.png\"\nimport QRCodeImg from \"../../assets/img/qr-code.svg\"\nimport {CertificateStatus} from \"../CertificateStatus\";\nimport {CustomButton} from \"../CustomButton\";\nimport QRScanner from \"../QRScanner\";\nimport JSZip from \"jszip\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nexport const CERTIFICATE_FILE = \"certificate.json\";\n\nexport const VerifyCertificate = () => {\n    const [result, setResult] = useState(\"\");\n    const [showScanner, setShowScanner] = useState(false);\n    const handleScan = data => {\n        if (data) {\n            const zip = new JSZip();\n            zip.loadAsync(data).then((contents) => {\n                return contents.files[CERTIFICATE_FILE].async('text')\n            }).then(function (contents) {\n                setResult(contents)\n            }).catch(err => {\n                    setResult(data)\n                }\n            );\n\n        }\n    };\n    const handleError = err => {\n        console.error(err)\n    };\n    return (\n        <div className=\"container-fluid verify-certificate-wrapper\">\n            {\n                !result &&\n                <>\n                    {!showScanner &&\n                    <>\n                        <img src={VerifyCertificateImg} className=\"banner-img\" alt=\"banner-img\"/>\n                        <h3 className=\"text-center\">Verify a vaccination certificate</h3>\n                        <CustomButton className=\"green-btn\" onClick={() => setShowScanner(true)}>\n                            <span>Scan QR code</span>\n                            <img className=\"ml-3\" src={QRCodeImg} alt={\"\"}/>\n                        </CustomButton>\n                        <Container className=\"mt-2 p-4\">\n                            <p>\n                                Once the Covid-19 vaccination is completed, a certificate is issued to the citizens as a proof of vaccination.\n                                The vaccination certificate has a secure QR code to protect it against falsification.\n                                The genuineness of the certificate can be authenticated from this portal.\n                            </p>\n                            <p style={{color:\"#646D82\"}}>Steps for verification</p>\n                            <ol className=\"verify-steps\">\n                                <li>Click on “Scan QR code” above</li>\n                                <li>A notification will prompt to activate your device’s camera</li>\n                                <li>Point the camera to the QR code on the certificate issued and scan</li>\n                                <li>On successful verification, the following will be displayed\n                                    <Row>\n                                        <Col>\n                                            <ul className=\"success-verify\">\n                                                <li>Message “Certificate Successfully Verified”</li>\n                                                <li>Name</li>\n                                                <li>Age</li>\n                                                <li>Gender</li>\n                                                <li>Beneficiary Reference ID</li>\n                                                <li>Date of Dose</li>\n                                                <li>Certificate Issued: Provisional/Final</li>\n                                                <li>Vaccination at</li>\n                                            </ul>\n                                        </Col>\n                                        <Col>\n                                            <img src={SampleCertificateImg} alt=\"\"/>\n                                        </Col>\n                                    </Row>\n                                </li>\n                                <li>If the certificate is not genuine, “Certificate Invalid” will be displayed</li>\n                            </ol>\n                            <p>You can view a <a href=\"https://divoc.egov.org.in/demo-videos/13.-certificate-verification\" target=\"_blank\">demo video</a> of ‘how to verify’</p>\n                            <hr style={{marginTop: \"3rem\", marginBottom: \"3rem\"}}/>\n                            <p>\n                                Private Sector Apps can now incorporate the \"Certificate verification\" service to verify COVID-19 certificates generated from Co-WIN. </p>\n                            <p style={{color:\"#646D82\"}}>The following steps need to be performed to integrate with Co-WIN and verify the COVID-19 certificate.\n                            </p>\n                            <ol className=\"verify-steps\">\n                                <li>Go to reference code <a href=\"https://github.com/egovernments/DIVOC/tree/india/verification\" target=\"_blank\">here</a></li>\n                                <li>Get code snippet for reference and implement</li>\n                                <li>Consume COWIN verification service into your application</li>\n                                <li>Replace the public key used in code snippet with Public key available <a href=\"https://verify.cowin.gov.in/did:india\" target=\"_blank\">here</a>.</li>\n                            </ol>\n                            <p>Note: Co-WIN uses an open-source component called \"DIVOC\" for the certificate issuance & verification service.</p>\n                        </Container>\n                    </>}\n                    {showScanner &&\n                    <>\n                        <QRScanner onError={handleError}\n                                   onScan={handleScan}/>\n                        <CustomButton className=\"green-btn\" onClick={() => setShowScanner(false)}>BACK</CustomButton>\n                    </>\n                    }\n                </>\n            }\n            {\n                result && <CertificateStatus certificateData={result} goBack={() => {\n                    setShowScanner(false);\n                    setResult(\"\");\n                }\n                }/>\n            }\n\n\n        </div>\n    )\n};\n","import { combineReducers } from \"redux\";\nimport {eventsReducer} from \"./events\";\n\nexport default combineReducers({ events: eventsReducer });\n","import {createStore} from \"redux\";\nimport rootReducer from \"./reducers\";\n\nconst loadState = () => {\n    try {\n        const serializedState = localStorage.getItem('state');\n        if (serializedState === null) {\n            return undefined;\n        }\n        return JSON.parse(serializedState);\n    } catch (err) {\n        return undefined;\n    }\n};\n\nconst saveState = (state) => {\n    try {\n        const serializedState = JSON.stringify(state);\n        localStorage.setItem('state', serializedState);\n    } catch {\n        // ignore write errors\n    }\n};\n\nconst persistedState = loadState();\n\nexport const store = createStore(\n    rootReducer,\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\n\n","import './App.css';\nimport {VerifyCertificate} from \"./components/VerifyCertificate\";\nimport {Provider} from \"react-redux\";\nimport {store} from \"./redux/store\";\n\nfunction App() {\n  return (\n      <Provider store={store}>\n        <div className=\"App\">\n            <VerifyCertificate />\n        </div>\n      </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}